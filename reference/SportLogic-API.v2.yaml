openapi: 3.0.0
info:
  title: SportLogic API (v2)
  version: '2.0'
  description: SportLogic API - version 2.
  contact:
    email: developer@sportlogic.com.au
    url: www.sportlogic.com.au
servers:
  - url: 'https://api-v2.sportlogic.net.au'
paths:
  '/programs/{id}':
    parameters:
      - schema:
          type: integer
        name: id
        in: path
        required: true
        description: program id
    get:
      summary: Get Program
      tags:
        - Program Domain
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: ./Program.json
              examples:
                example-1:
                  value:
                    id: 0
                    name: string
                    active: true
                    description: string
        '404':
          description: Not Found
      operationId: get-domain-programs-id
      description: Get a Program
      security:
        - API Key: []
  /contacts:
    get:
      summary: Get Contacts
      tags:
        - Contact Domain
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: ./Contact.json
              examples: {}
      operationId: get-domain-contacts
      description: Retrieve contacts
      parameters:
        - schema:
            type: number
          in: query
          name: skip
        - schema:
            type: number
          in: query
          name: limit
      security:
        - API Key: []
    parameters: []
  '/contacts/{id}':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
        description: Contact ID
    get:
      summary: Get Contact
      tags:
        - Contact Domain
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: ./Contact.json
        '404':
          description: Not Found
      operationId: get-domain-contacts-id
      description: Get a single Contact.
      security:
        - API Key: []
  '/members/{id}/card':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
        description: membership id
    get:
      summary: Get member card
      tags:
        - Membership Domain
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: ./MembershipCard.json
        '404':
          description: Not Found
      operationId: get-domain-members-id-card
      description: Get member card details
      security:
        - API Key: []
    put:
      summary: Update member card
      operationId: put-domain-members-id-card
      responses:
        '200':
          description: Updated
        '201':
          description: Created
      description: Update member card details
      security:
        - API Key: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: ./MembershipCard.json
      tags:
        - Membership Domain
  /members:
    get:
      summary: Get members
      tags:
        - Membership Domain
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: ./Membership.json
      operationId: get-domain-members
      description: ''
      security:
        - API Key: []
    parameters: []
  /venue-platform-service/venues:
    get:
      summary: Get Venues
      tags:
        - Venue Platform
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: ./VPVenue.json
      operationId: get-venue-platform-service
      parameters:
        - schema:
            type: string
          in: query
          name: siteCode
          description: Site Code e.g. "tennisvenues.com.au"
          required: true
        - schema:
            type: string
          in: query
          name: sportType
          description: 'Sport Type e.g. "Squash", "Badminton"'
        - schema:
            type: integer
          in: query
          name: skip
          description: Number of records to skip.
        - schema:
            type: integer
          in: query
          name: limit
          description: Number of records to fetch.
      security:
        - API Key: []
    parameters: []
  /resources:
    get:
      summary: Get Resources
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: ./Resource.json
      operationId: get-resources
      description: Retrieve resources
      security:
        - API Key: []
      parameters:
        - schema:
            type: integer
          in: query
          name: venueId
          description: Get resources by venue
        - schema:
            type: boolean
          in: query
          name: webEnabledOnly
          description: Filter resources by web enabled
      tags:
        - Resource Domain
  '/resources/{id}':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
    get:
      summary: Get Resource
      tags:
        - Resource Domain
      responses:
        '200':
          description: OK
        '404':
          description: Not Found
      operationId: get-resources-id
      description: Retrieve resource by ID
      security:
        - API Key: []
  /web-booking-service/get-business-opening-hours:
    get:
      summary: Get Venue Opening Hours
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                description: 'Return an array of 2 strings - the start and end time. Both time strings are in HH:mm:ss format'
                items:
                  type: string
                  format: time
                  pattern: 'HH:mm:ss'
      operationId: get-web-booking-service-get-business-opening-hours
      parameters:
        - schema:
            type: integer
          in: query
          name: venueId
          description: ID of the venue
        - schema:
            type: string
          in: query
          name: date
          description: 'The date to check opening hours, format yyyyMMdd'
      security:
        - API Key: []
  /web-booking-service/create-web-booking:
    post:
      summary: Create Web Booking
      operationId: post-web-booking-service-create-web-booking
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: string
                description: WebBookingId
        '500':
          description: Internal Server Error
      security:
        - API Key: []
      parameters:
        - schema:
            type: string
            format: date
          in: query
          name: date
          required: true
          description: 'Booking date, format yyyyMMdd'
        - schema:
            type: string
          in: query
          name: timeFrom
          description: 'Booking start time, format HH:mm:ss'
          required: true
        - schema:
            type: string
          in: query
          name: timeTo
          description: 'Booking end time, format HH:mm:ss'
          required: true
        - schema:
            type: string
          in: query
          name: resourceId
          description: Resource ID
          required: true
        - schema:
            type: string
          in: query
          name: venueName
          description: Venue name
          required: true
        - schema:
            type: number
          in: query
          name: fee
          required: true
          description: Booking fee
        - schema:
            type: number
          in: query
          name: dueAmount
          description: Amount required to be paid
          required: true
        - schema:
            type: string
          in: query
          name: taxCode
          required: true
        - schema:
            type: string
          in: query
          name: bookingName
          description: Booking person's name
          required: true
        - schema:
            type: string
          in: query
          name: bookingEmail
          description: Booking person's email
          required: true
        - schema:
            type: string
          in: query
          name: bookingContactNumber
          description: Booking person's contact number
        - schema:
            type: string
          in: query
          name: membershipId
          description: Membership ID
        - schema:
            type: string
          in: query
          name: membershipOrCardNumberUsed
          description: Membership number
        - schema:
            type: integer
          in: query
          name: pendingExpired
          description: 'How long will booking stay in the system in minutes, system default expired in 8 minutes'
        - schema:
            type: boolean
          in: query
          name: applyCredit
          description: Is booking applying credit note
        - schema:
            type: string
          in: query
          name: creditNoteNumber
          description: Credit note number to be applied
        - schema:
            type: number
          in: query
          name: creditAmountUsed
          description: Credit amount to be applied
        - schema:
            type: boolean
          in: query
          name: promoApplied
          description: Is booking applying promotion code
        - schema:
            type: string
          in: query
          name: promoCode
          description: Promotion code to be applied
        - schema:
            type: number
          in: query
          name: promoAmount
          description: Promotion code amount to be applied
        - schema:
            type: string
          in: query
          name: venueEmail
        - schema:
            type: string
          in: query
          name: venueNotificationEmails
        - schema:
            type: string
          in: query
          name: siteCode
          description: Web site code
        - schema:
            type: string
          in: query
          name: externalBookingId
          description: External booking record ID
        - schema:
            type: string
          in: query
          name: externalUserId
          description: External user ID
        - schema:
            type: string
          in: query
          name: contactId
          description: SportLogic contact ID
  /web-booking-service/confirm-web-booking-no-payment:
    post:
      summary: Confirm Web Booking No Payment
      operationId: post-web-booking-service-confirm-web-booking
      responses:
        '200':
          description: OK
        '500':
          description: Internal Server Error
      security:
        - API Key: []
      parameters:
        - schema:
            type: string
          in: query
          name: bookingRef
          required: true
          description: Booking reference from WebBooking
        - schema:
            type: string
          in: query
          name: venueAlias
          description: 'Venue Alias, will be stored in WebBooking'
        - schema:
            type: string
          in: query
          name: venueName
          description: 'Venue Name, will be stored in WebBooking'
        - schema:
            type: string
          in: query
          name: venueEmail
          description: 'Venue Email, will be stored in WebBooking'
        - schema:
            type: string
          in: query
          name: notificationEmails
          description: 'User''s email, for sending confirmation email'
        - schema:
            type: string
          in: query
          name: siteCode
          description: Booking platform website
        - schema:
            type: string
          in: query
          name: accessCode
          description: Resource access code (if any)
    parameters: []
  /booking-service/get-bookings:
    get:
      summary: Get Bookings By Contact
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
      operationId: get-booking-service-get-bookings
      security:
        - API Key: []
      parameters:
        - schema:
            type: string
          in: query
          name: contactId
          required: true
          description: SportLogic Contact ID
        - name: startDate
        - schema:
            type: string
          in: query
          name: startDate
          required: true
          description: 'Date range start date, format yyyyMMd'
        - schema:
            type: string
          in: query
          name: endDate
          description: 'Date range end date, format yyyyMMd'
          required: true
        - schema:
            type: boolean
          in: query
          name: excludePending
          description: Excludes pending bookings
        - schema:
            type: boolean
          in: query
          name: excludeCancelled
          description: Excludes cancelled bookings
        - schema:
            type: integer
          in: query
          name: maxResults
          description: Max search results
components:
  schemas: {}
  securitySchemes:
    API Key:
      name: apiKey
      type: apiKey
      in: header
security:
  - API Key: []
tags:
  - name: Contact Domain
  - name: Membership Domain
